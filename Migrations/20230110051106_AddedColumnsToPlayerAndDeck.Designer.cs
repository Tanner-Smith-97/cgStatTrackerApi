// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StatTracker.DbContexts;

#nullable disable

namespace StatTracker.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230110051106_AddedColumnsToPlayerAndDeck")]
    partial class AddedColumnsToPlayerAndDeck
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("StatTracker.DbContexts.DeckEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("DeckName")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("DeckName");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int")
                        .HasColumnName("GamesPlayed");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int")
                        .HasColumnName("GamesWon");

                    b.Property<int>("Mmr")
                        .HasColumnType("int")
                        .HasColumnName("Mmr");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    b.HasKey("Id");

                    b.HasIndex("PlayerEntityId");

                    b.ToTable("Decks");
                });

            modelBuilder.Entity("StatTracker.DbContexts.GameEntity", b =>
                {
                    b.Property<int>("GameId")
                        .HasColumnType("int")
                        .HasColumnName("GameId");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int")
                        .HasColumnName("PlayerId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("Date");

                    b.Property<int>("DeckEntityId")
                        .HasColumnType("int");

                    b.Property<int>("DeckId")
                        .HasColumnType("int")
                        .HasColumnName("DeckId");

                    b.Property<int>("DeckMmr")
                        .HasColumnType("int")
                        .HasColumnName("GameMmr");

                    b.Property<int>("Placement")
                        .HasColumnType("int")
                        .HasColumnName("Placement");

                    b.Property<int>("PlayerEntityId")
                        .HasColumnType("int");

                    b.Property<int>("PlayerMmr")
                        .HasColumnType("int")
                        .HasColumnName("PlayerMmr");

                    b.HasKey("GameId", "PlayerId");

                    b.HasIndex("DeckEntityId");

                    b.HasIndex("PlayerEntityId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("StatTracker.DbContexts.PlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<int>("GamesPlayed")
                        .HasColumnType("int")
                        .HasColumnName("GamesPlayed");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int")
                        .HasColumnName("GamesWon");

                    b.Property<int>("Mmr")
                        .HasColumnType("int")
                        .HasColumnName("Mmr");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("StatTracker.DbContexts.DeckEntity", b =>
                {
                    b.HasOne("StatTracker.DbContexts.PlayerEntity", "PlayerEntity")
                        .WithMany("Decks")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("StatTracker.DbContexts.GameEntity", b =>
                {
                    b.HasOne("StatTracker.DbContexts.DeckEntity", "DeckEntity")
                        .WithMany("Games")
                        .HasForeignKey("DeckEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StatTracker.DbContexts.PlayerEntity", "PlayerEntity")
                        .WithMany("Games")
                        .HasForeignKey("PlayerEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DeckEntity");

                    b.Navigation("PlayerEntity");
                });

            modelBuilder.Entity("StatTracker.DbContexts.DeckEntity", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("StatTracker.DbContexts.PlayerEntity", b =>
                {
                    b.Navigation("Decks");

                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
